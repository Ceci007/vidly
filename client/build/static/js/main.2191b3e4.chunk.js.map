{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","services/authService.js","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","services/genreService.js","components/searchbox.jsx","components/movies.jsx","utils/paginate.js","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/profile.jsx","components/movieCard.jsx","components/movieCardList.jsx","components/posters.jsx","components/notFound.jsx","components/navBar.jsx","components/footer.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","apiEndPoint","movieUrl","id","getMovies","http","getMovie","movieId","saveMovie","movie","_id","body","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","className","this","columns","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","createKey","data","Table","Like","classes","liked","aria-hidden","style","cursor","token","email","password","a","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","MoviesTable","Link","to","title","onLike","deleteColumn","onDelete","class","user","auth","isAdmin","push","movies","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","getGenres","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","event","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","movieImg","string","required","number","min","max","allow","optional","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Profile","MovieCard","src","alt","MovieCardList","Posters","NotFound","NavBar","collapsed","toggleNavbar","classOne","classTwo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","withRouter","location","pathname","LoginForm","username","window","from","Redirect","Logout","RegisterForm","ProtectedRoute","component","render","Route","App","Switch","exact","Boolean","hostname","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2191b3e4.chunk.js","sourcesContent":["function init() {}\r\n\r\nfunction log(error) {\r\n  console.error(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};\r\n","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occurrred.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","import http from './httpService';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst apiEndPoint = '/movies';\r\n\r\nfunction movieUrl(id) {\r\n    return `${apiEndPoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n    return http.get(apiEndPoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n    return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n    if(movie._id) {\r\n        const body = {...movie};\r\n        delete body._id;\r\n        return http.put(movieUrl(movie._id), body);\r\n    }\r\n\r\n    return http.post(apiEndPoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n    return http.delete(movieUrl(movieId));\r\n}","import React, { Component } from 'react';\r\n\r\nclass TableHeader extends Component {\r\n    raiseSort = path => {\r\n        const sortColumn = {...this.props.sortColumn};\r\n        \r\n        if(sortColumn.path === path) {\r\n        sortColumn.order = (sortColumn.order === 'asc') ? 'desc' : 'asc';\r\n        }\r\n        else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = 'asc';\r\n        }\r\n\r\n        this.props.onSort(sortColumn);\r\n    }\r\n\r\n    renderSortIcon = column => {\r\n        const { sortColumn } = this.props;\r\n\r\n        if(column.path !== sortColumn.path) return null;\r\n        if(sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>;\r\n        return <i className=\"fa fa-sort-desc\"></i>;\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n        <thead>\r\n            <tr>\r\n                {this.props.columns.map(column => (\r\n                <th className = \"clickable\"\r\n                key = {column.path || column.key} \r\n                onClick = {() => this.raiseSort(column.path)}>\r\n                {column.label} {this.renderSortIcon(column)}\r\n                </th>))}\r\n            </tr> \r\n        </thead> \r\n        );\r\n    }\r\n}\r\n \r\nexport default TableHeader;","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\nimport \"../../css/Table.css\";\r\n\r\nconst Table = props => {\r\n    const { columns, sortColumn, onSort, data } = props;\r\n\r\n    return (  \r\n        <table className=\"table table-responsive-sm\" id=\"table-border\">\r\n                <TableHeader \r\n                columns = {columns} \r\n                sortColumn = {sortColumn} \r\n                onSort = {onSort}\r\n                />\r\n                <TableBody data = {data} columns = {columns} />\r\n        </table>\r\n    );\r\n}\r\n \r\nexport default Table","import React from 'react';\r\n\r\nconst Like = (props) => {\r\n    let classes = \"fa fa-heart\";\r\n    if(!props.liked) classes += \"-o\";\r\n    \r\n    return (\r\n        <i \r\n        onClick = {props.onClick} \r\n        className = {classes}\r\n        aria-hidden = \"true\"\r\n        style = {{cursor: 'pointer'}}\r\n        ></i>\r\n    );\r\n}\r\n \r\nexport default Like;","import http from './httpService';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst apiEndPoint = \"/auth\";\r\nconst token = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nasync function login(email, password) {\r\n    const { data: jwt } = await http.post(apiEndPoint, { email, password });\r\n    localStorage.setItem(token, jwt);\r\n}\r\n\r\nfunction loginWithJwt(jwt) {\r\n    localStorage.setItem(token, jwt);\r\n}\r\n\r\nfunction logout() {\r\n    localStorage.removeItem(token);\r\n}\r\n\r\nfunction getCurrentUser() {\r\n    try {\r\n        const jwt = localStorage.getItem(token);\r\n        return jwtDecode(jwt);\r\n      } catch(ex) {\r\n        return null;\r\n      }\r\n}\r\n\r\nfunction getJwt() {\r\n    return localStorage.getItem(token);\r\n}\r\n\r\nexport default {\r\n    login,\r\n    loginWithJwt,\r\n    logout, \r\n    getCurrentUser,\r\n    getJwt\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from './common/table';\r\nimport Like from './common/like';\r\nimport auth from '../services/authService';\r\nimport \"../css/Table.css\";\r\n\r\nclass MoviesTable extends Component {\r\n    columns = [\r\n        { path: 'title', \r\n          label: 'Title', \r\n          content: movie => <Link className = \"black\" to = {`/movies/${movie._id}`}>{movie.title}</Link> },\r\n        { path: 'genre.name', label: 'Genre' },\r\n        { path: 'numberInStock', label: 'Stock' },\r\n        { path: 'dailyRentalRate', label: 'Rate' },\r\n        { key: 'like', \r\n          content: movie => \r\n          (<Like liked = {movie.liked} onClick = {() => this.props.onLike(movie)} />) \r\n        }\r\n    ];\r\n\r\n    deleteColumn = {\r\n      key: 'delete',\r\n          content: movie =>\r\n          (<button \r\n            onClick = {() => this.props.onDelete(movie)}\r\n            className = \"btn btn-danger btn-sm\">\r\n              <i class=\"far fa-trash-alt\"></i>\r\n          </button>)\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n      const user = auth.getCurrentUser();\r\n      if(user && user.isAdmin) {\r\n        this.columns.push(this.deleteColumn);\r\n      }\r\n    }\r\n\r\n    render() { \r\n        const { movies, onSort, sortColumn } = this.props;\r\n\r\n        return ( \r\n            <Table \r\n            columns = {this.columns} \r\n            data = {movies} \r\n            onSort = {onSort}\r\n            sortColumn = {sortColumn}\r\n            />\r\n         );\r\n    }\r\n}\r\n\r\n \r\nexport default MoviesTable;","import React from 'react';\r\n\r\nconst ListGroup = props => {\r\n    const { items, textProperty, valueProperty, selectedItem, onItemSelect } = props;\r\n\r\n    return ( \r\n        <ul className=\"list-group size\">\r\n            {items.map(item => \r\n            <li \r\n            onClick = {() => onItemSelect(item)} \r\n            key = {item[valueProperty]} \r\n            className={item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}\r\n            >\r\n                {item[textProperty]}\r\n            </li>\r\n            )}\r\n        </ul>\r\n     );\r\n}\r\n\r\nListGroup.defaultProps = {\r\n    textProperty: \"name\",\r\n    valueProperty: \"_id\"\r\n};\r\n \r\nexport default ListGroup;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = props => {\r\n    const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    if(pagesCount === 1) return null;\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n    return ( \r\n        <nav>\r\n            <div className = \"center-page\">\r\n            <ul className=\"pagination\">\r\n                {pages.map(page =>(\r\n                    <li key = {page} className={ page === currentPage ? \"page-item active\" : \"page-item\" }>\r\n                    <a onClick = {() => onPageChange(page)} className=\"page-link\">{page}</a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired, \r\n    pageSize: PropTypes.number.isRequired, \r\n    currentPage: PropTypes.number.isRequired, \r\n    onPageChange: PropTypes.func.isRequired\r\n};\r\n \r\nexport default Pagination;","import http from './httpService';\r\n\r\nexport function getGenres() {\r\n    return http.get('/genres');\r\n}\r\n  ","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n      <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { getMovies, deleteMovie } from '../services/movieService';\r\nimport MoviesTable from './moviesTable';\r\nimport ListGroup from './common/listGroup';\r\nimport Pagination from './common/pagination';\r\nimport { getGenres } from '../services/genreService';\r\nimport { paginate } from '../utils/paginate';\r\nimport { Link } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport SearchBox from \"./searchbox\";\r\n\r\nclass Movies extends Component {\r\n    state = { \r\n        movies: [],\r\n        genres: [],\r\n        currentPage: 1,\r\n        pageSize: 4,\r\n        searchQuery: \"\",\r\n        selectedGenre: null,\r\n        sortColumn: { path: 'title', order: 'asc' }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data } = await getGenres();\r\n        const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n\r\n        const { data: movies } = await getMovies();\r\n        this.setState({ movies, genres });\r\n    }\r\n\r\n    handleDelete = async (movie) => {\r\n        const originalMovies = this.state.movies;\r\n        const movies = originalMovies.filter(m => m._id !== movie._id);\r\n        this.setState({ movies });\r\n\r\n        try {\r\n            await deleteMovie(movie._id);\r\n        } catch(ex) {\r\n            if(ex.response && ex.response.status === 404) {\r\n                toast.error(\"This movie has already been deleted.\");\r\n\r\n                this.setState({ movies: originalMovies });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleLike = movie => {\r\n        const movies = [...this.state.movies];\r\n        const index = movies.indexOf(movie);\r\n        movies[index] = {...movies[index]};\r\n        movies[index].liked = !movies[index].liked;\r\n        this.setState({ movies });\r\n    }\r\n\r\n    handlePageChange = page => {\r\n        this.setState({ currentPage: page });\r\n    }\r\n\r\n    handleGenreSelect = genre => {\r\n        this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n    }\r\n\r\n    handleSearch = query => {\r\n        this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n    }\r\n\r\n    handleSort = sortColumn => {\r\n        this.setState({ sortColumn });\r\n    }\r\n\r\n    getPagedData = () => {\r\n        const { \r\n            pageSize, \r\n            currentPage, \r\n            sortColumn, \r\n            selectedGenre, \r\n            searchQuery,\r\n            movies: allMovies } = this.state;\r\n\r\n        let filtered = allMovies;\r\n        if (searchQuery)\r\n            filtered = allMovies.filter(m =>\r\n            m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n            );\r\n        else if (selectedGenre && selectedGenre._id)\r\n            filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n        const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n        return { totalCount: filtered.length, data: movies };\r\n    }\r\n\r\n    render() { \r\n        const { user } = this.props;\r\n        const { length: count } = this.state.movies;\r\n        const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n\r\n        const { totalCount, data: movies } = this.getPagedData();\r\n\r\n        return ( \r\n            <div className = \"row d-flex justify-content-center\">\r\n                <div className=\"col-md-3 col-sm-12\">\r\n                    <div className = \"center\">\r\n                        <ListGroup \r\n                        items = {this.state.genres} \r\n                        selectedItem = {this.state.selectedGenre}\r\n                        onItemSelect = {this.handleGenreSelect} \r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-9 col-sm-12\">\r\n                <div className = \"center\">\r\n                {user && <Link to = \"/movies/new\"\r\n                className = \"btn btn-primary btn-round px-4 my-3\"\r\n                >New Movie</Link>}\r\n                </div>\r\n                <div className = \"center margin\">\r\n                <p>Showing {totalCount} movies in the database.</p>\r\n                <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n                <MoviesTable \r\n                movies = {movies} \r\n                sortColumn = {sortColumn}\r\n                onLike = {this.handleLike} \r\n                onDelete = {this.handleDelete} \r\n                onSort = {this.handleSort}\r\n                />\r\n                <Pagination \r\n                itemsCount = {totalCount} \r\n                pageSize = {pageSize} \r\n                currentPage = {currentPage}\r\n                onPageChange = {this.handlePageChange}\r\n                />\r\n                </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Movies;","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1)*pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","import React from 'react';\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n    return ( \r\n        <span className = \"bmd-form-group\">\r\n            <div className=\"control-group my-4\">\r\n            <label htmlFor={name}>{ label }</label>\r\n                <input \r\n                {...rest}\r\n                name = {name}\r\n                id = {name} \r\n                className=\"form-control\"/>\r\n                {error && <div className=\"mt-2 alert alert-danger\">{error}</div>}\r\n            </div>\r\n        </span>\r\n     );\r\n}\r\n \r\nexport default Input;","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './select';\r\nimport '../../assets/css/template.css';\r\n\r\nclass Form extends Component {\r\n    state = { \r\n        data: {},\r\n        errors: {}\r\n    }\r\n\r\n    validate = () => {\r\n        const { error } = Joi.validate(this.state.data, this.schema, { abortEarly: false });\r\n        if(!error) return null;\r\n\r\n        const errors = {};\r\n        for(let item of error.details)\r\n            errors[item.path[0]] = item.message;\r\n        return errors;\r\n    }\r\n\r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] };\r\n        const { error } = Joi.validate(obj, schema);\r\n        return error ? error.details[0].message : null;\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const errors = this.validate();\r\n        \r\n        this.setState({ errors: errors || {} });\r\n        if(errors) return;\r\n\r\n        this.doSubmit();\r\n    }\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const errors = {...this.state.errors};\r\n        const errorMessage = this.validateProperty(input);\r\n        if(errorMessage) errors[input.name] = errorMessage;\r\n        else delete errors[input.name];\r\n\r\n        const data = {...this.state.data};\r\n        data[input.name] = input.value;\r\n        this.setState({ data, errors });\r\n    }\r\n\r\n    renderButton(label) {\r\n        return (\r\n        <button \r\n        type=\"submit\"\r\n        disabled = {this.validate()}\r\n        className=\"btn btn-primary\">{label}\r\n        </button>\r\n        );\r\n    }\r\n\r\n    renderInput(name, label, type = 'text') {\r\n        const { data, errors } = this.state;\r\n\r\n        return (\r\n            <Input\r\n            type = {type}\r\n            name = {name}\r\n            value = {data[name]}\r\n            label = {label}\r\n            onChange = {this.handleChange}\r\n            error = {errors[name]}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderSelect(name, label, options) {\r\n        const { data, errors } = this.state;\r\n    \r\n        return (\r\n          <Select\r\n            name={name}\r\n            value={data[name]}\r\n            label={label}\r\n            options={options}\r\n            onChange={this.handleChange}\r\n            error={errors[name]}\r\n          />\r\n        );\r\n    }\r\n}\r\n \r\nexport default Form;","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\n\r\nclass MovieForm extends Form {\r\n    state = {  \r\n        data: {\r\n            title: \"\",\r\n            genreId: \"\",\r\n            numberInStock: \"\",\r\n            dailyRentalRate: \"\",\r\n            movieImg: null\r\n          },\r\n          genres: [],\r\n          errors: {}\r\n    }\r\n\r\n    schema = {\r\n        _id: Joi.string(),\r\n        title: Joi.string()\r\n          .required()\r\n          .label(\"Title\"),\r\n        genreId: Joi.string()\r\n          .required()\r\n          .label(\"Genre\"),\r\n        numberInStock: Joi.number()\r\n          .required()\r\n          .min(0)\r\n          .max(100)\r\n          .label(\"Number in Stock\"),\r\n        dailyRentalRate: Joi.number()\r\n          .required()\r\n          .min(0)\r\n          .max(10)\r\n          .label(\"Daily Rental Rate\"),\r\n        movieImg: Joi.string().allow(\"\").optional()\r\n    }\r\n\r\n    async populateGenres() {\r\n      const { data: genres } = await getGenres();\r\n        this.setState({ genres });\r\n    }\r\n\r\n    async populateMovie() {\r\n      try {\r\n        const movieId = this.props.match.params.id;\r\n        if (movieId === \"new\") return;\r\n\r\n        const { data: movie } = await getMovie(movieId);\r\n        this.setState({ data: this.mapToViewModel(movie) });\r\n      } catch(ex) {\r\n       if (ex.response && ex.response.status === 404) \r\n        this.props.history.replace(\"/not-found\");\r\n      }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.populateGenres();    \r\n        await this.populateMovie();\r\n    }\r\n    \r\n      mapToViewModel(movie) {\r\n        return {\r\n          _id: movie._id,\r\n          title: movie.title,\r\n          genreId: movie.genre._id,\r\n          numberInStock: movie.numberInStock,\r\n          dailyRentalRate: movie.dailyRentalRate,\r\n          movieImg: movie.movieImg\r\n        };\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        await saveMovie(this.state.data);\r\n       \r\n        this.props.history.push(\"/movies\");\r\n    } \r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div className = \"container\">\r\n              <div className = \"height\"></div>\r\n              <div className = \"card card-login card-hidden\">\r\n              <div className = \"card-header card-header-primary text-center\">\r\n                <h4>Movie Form</h4>\r\n              </div>\r\n              <form onSubmit={this.handleSubmit} className=\"group-flex\">\r\n                <div className = \"card-body text-center p-4\">\r\n                {this.renderInput(\"title\", \"Title\")}\r\n                {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n                {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n                {this.renderInput(\"movieImg\", \"Insert image link\")}\r\n                {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n                {this.renderButton(\"Save\")}\r\n                </div>\r\n              </form>\r\n            </div>        \r\n          </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MovieForm;","import React from 'react';\r\n\r\nconst Customers = () => {\r\n    return ( \r\n        <div>\r\n            <div className=\"height\"></div>\r\n            <h5 className = \"text-center\">There are no customers in our database.</h5>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Customers;","import React, { Component } from 'react';\r\n\r\nclass Profile extends Component {\r\n  render() {\r\n    const { user } = this.props;\r\n    \r\n    return ( \r\n      <div>\r\n        <div className=\"height\"></div>\r\n        <h5 className = \"text-center\">Welcome to Vidly</h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Profile;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../css/MovieCard.css\";\r\n\r\nclass MovieCard extends Component {\r\n    render() { \r\n        const { title, movieImg, genre, _id } = this.props.movie;\r\n\r\n        return ( \r\n            <article>\r\n                <div className=\"card my-4\">\r\n                    {movieImg !== \"\" ? \r\n                    <div className=\"image-box\">\r\n                        <img src = {`${movieImg}`} \r\n                         alt = \"\" className = \"img-fluid card-img-top\" />\r\n                    </div>\r\n                    :\r\n                    <div className=\"image-box\">\r\n                        <img src = \"./default-image.jpg\"\r\n                        alt = \"\" className = \"img-fluid card-img-top\" />\r\n                    </div>}        \r\n                    <div className=\"card-body text-center\">\r\n                        <h5>{title}</h5>\r\n                        <p>{genre.name}</p>\r\n                    </div>\r\n                    {/*<Link to = {`/movies/${_id}`} className=\"btn btn-primary mb-3 width\">\r\n                        Change Image\r\n                    </Link>*/}\r\n                </div>\r\n            </article>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MovieCard;","import React, { Component } from 'react';\r\nimport MovieCard from '../components/movieCard';\r\nimport { getMovies } from '../services/movieService'; \r\n\r\nclass MovieCardList extends Component {\r\n    state = { movies: [] }\r\n\r\n    async componentDidMount() {\r\n        const { data: movies } = await getMovies();\r\n        this.setState({ movies })\r\n    }\r\n\r\n    render() { \r\n        const { movies } = this.state;\r\n\r\n        return ( \r\n            <section>\r\n                <div className=\"row\">\r\n                {movies.map(movie => {\r\n                    return (\r\n                        <div key = {movie._id} className=\"col-md-4 col-sm-12\">\r\n                            <MovieCard \r\n                                key = {movie._id}\r\n                                movie = {movie}\r\n                            />\r\n                        </div>\r\n                    );\r\n                })}\r\n                </div>\r\n            </section>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MovieCardList;","import React, { Component } from 'react';\r\nimport MovieCardList from './movieCardList';\r\n\r\nclass Posters extends Component {    \r\n    render() { \r\n        return ( \r\n            <MovieCardList />\r\n         );\r\n    }\r\n}\r\n \r\nexport default Posters;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <h5>Not Found</h5>\r\n     );\r\n}\r\n \r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nclass NavBar extends Component {\r\n    state = {\r\n        collapsed: true,\r\n        user: this.props.user\r\n    }\r\n\r\n    toggleNavbar = () => {\r\n        this.setState({ collapsed: !this.state.collapsed });\r\n    }\r\n\r\n    render(){\r\n        const collapsed = this.state.collapsed;\r\n        const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\r\n        const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\r\n        const { user } = this.props;\r\n\r\n        return ( \r\n            <nav className= \"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className = \"container\">\r\n                <Link className = \"navbar-brand\" to = \"/\">\r\n                    <img src = \"https://github.com/Ceci007/images/blob/master/img-vidly/logo.png?raw=true\"\r\n                     alt = \"logo\" className = \"logo\"\r\n                    />\r\n                </Link>\r\n                <button  \r\n                onClick={this.toggleNavbar} \r\n                className={`${classTwo} p-2`} \r\n                type=\"button\" \r\n                data-toggle=\"collapse\" \r\n                data-target=\"#navbarResponsive\" \r\n                aria-controls=\"navbarResponsive\" \r\n                aria-expanded=\"false\" \r\n                aria-label=\"Toggle navigation\">\r\n                    <span className = \"navbar-toggler-icon\"></span>\r\n                    <span className = \"navbar-toggler-icon\"></span>\r\n                    <span className = \"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className={`${classOne}`} id=\"navbarResponsive\">\r\n                    <ul className = \"navbar-nav\">\r\n                    <li className = \"nav-item mx-auto\">\r\n                        <NavLink className = \"nav-link\" to = \"/movies\">Movies</NavLink>\r\n                    </li>\r\n                    <li className = \"nav-item mx-auto\">\r\n                        <NavLink className = \"nav-link\" to = \"/customers\">Customers</NavLink>\r\n                    </li>\r\n                    <li className = \"nav-item mx-auto\">\r\n                        <NavLink className = \"nav-link\" to = \"/rentals\">Posters</NavLink>\r\n                    </li>\r\n                    {!user && \r\n                        <React.Fragment>\r\n                            <li className = \"nav-item mx-auto\">\r\n                                <NavLink className = \"nav-link\" to = \"/login\">Login</NavLink>\r\n                            </li>\r\n                            <li className = \"nav-item mx-auto\">\r\n                                <NavLink className = \"nav-link\" to = \"/register\">Register</NavLink>\r\n                            </li>\r\n                        </React.Fragment>\r\n                    }\r\n                    {user && \r\n                        <React.Fragment>\r\n                            <li className = \"nav-item mx-auto\">\r\n                                <NavLink className = \"nav-link\" to = \"/profile\">{user.name}</NavLink>\r\n                            </li>\r\n                            <li className = \"nav-item mx-auto\">\r\n                                <NavLink className = \"nav-link\" to = \"/logout\">Logout</NavLink>\r\n                            </li>\r\n                        </React.Fragment>\r\n                    }\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </nav>\r\n         );\r\n    }\r\n}\r\n \r\nexport default NavBar;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';  \r\nimport '../index.css';\r\n\r\nconst Footer = (props) => {\r\n    const { location } = props;\r\n\r\n    if (location.pathname.match(\"/register\") || location.pathname.match(\"/login\")){\r\n        return null;\r\n    }\r\n\r\n    return ( \r\n       <footer>\r\n            <p>\r\n                &copy; 2019, made by <i className=\"fa fa-heart\"></i> Cecilia Benítez Casaccia, for a better web.\r\n            </p>\r\n       </footer>\r\n     );\r\n}\r\n \r\nexport default withRouter(Footer);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\nimport \"../css/RegisterForm.css\";\r\n\r\nclass LoginForm extends Form {\r\n    state = {\r\n        data: { username: '', password: '' },\r\n        errors: {}\r\n    }\r\n\r\n    schema = {\r\n        username: Joi.string().required().label('Username'),\r\n        password: Joi.string().required().label('Password')\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            const { data } = this.state;\r\n            await auth.login(data.username, data.password);\r\n            const { state } = this.props.location;\r\n            window.location = state ? state.from.pathname : \"/\";\r\n        } catch(ex) {\r\n            if(ex.response && ex.response.status === 400) {\r\n                const errors = {...this.state.errors};\r\n                errors.username = ex.response.data;\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() { \r\n        if(auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n        return ( \r\n            <div className = \"background-image\">\r\n                 <img src = \"https://github.com/Ceci007/images/blob/master/img-vidly/Avengers2.jpg?raw=true\"\r\n                 alt = \"background\"\r\n               />\r\n               <div className = \"container bg-overlap\">\r\n                   <div className = \"row\">\r\n                       <div className = \"col-lg-4 col-md-6 col-sm-8 ml-auto mr-auto\">\r\n                       <form onSubmit = {this.handleSubmit}>\r\n                        <div  className = \"card card-login card-hidden\">\r\n                            <div className = \"card-header card-header-primary text-center\">\r\n                            <h4>Login</h4> \r\n                            </div>\r\n                            <div className = \"card-body text-center p-4\">\r\n                                {this.renderInput(\"username\", \"Username\")}\r\n                                {this.renderInput(\"password\", \"Password\", \"password\")}\r\n                                {this.renderButton('Login')}\r\n                            </div>\r\n                        </div>\r\n                        </form>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default LoginForm;","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        auth.logout();\r\n        window.location = \"/\";\r\n    }\r\n\r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout;","import http from './httpService';\r\n\r\nconst apiEndPoint = \"/users\";\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndPoint, {\r\n        email: user.username,\r\n        password: user.password,\r\n        name: user.name\r\n    });\r\n}","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from '../services/authService';\r\nimport \"../css/RegisterForm.css\";\r\n\r\nclass RegisterForm extends Form {\r\n    state = { \r\n        data: { username: \"\", password: \"\", name: \"\" },\r\n        errors: {}\r\n    }\r\n\r\n    schema = {\r\n        username: Joi.string()\r\n          .required()\r\n          .email()\r\n          .label(\"Username\"),\r\n        password: Joi.string()\r\n          .required()\r\n          .min(5)\r\n          .label(\"Password\"),\r\n        name: Joi.string()\r\n          .required()\r\n          .label(\"Name\")\r\n    } \r\n    \r\n    doSubmit = async () => {\r\n      try {\r\n        const response = await userService.register(this.state.data);\r\n        auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n        window.location = \"/\";\r\n      } catch(ex) {\r\n        if(ex.response && ex.response.status === 400) {\r\n          const errors = {...this.state.errors};\r\n          errors.username = ex.response.data;\r\n          this.setState({ errors });\r\n        }\r\n      }\r\n    }\r\n\r\n    render() {     \r\n        return ( \r\n            <div className = \"background-image\">\r\n                <img src = \"https://github.com/Ceci007/images/blob/master/img-vidly/Avengers2.jpg?raw=true\"\r\n                 alt = \"background\"\r\n               />\r\n                <div className = \"container bg-overlap\">\r\n                    <div className = \"row\">\r\n                        <div className = \"col-lg-4 col-md-6 col-sm-8 ml-auto mr-auto\">\r\n                        <form onSubmit = {this.handleSubmit} >\r\n                          <div className = \"card card-login card-hidden\">\r\n                            <div className = \"card-header card-header-primary text-center\">\r\n                                <h4>Register</h4>\r\n                            </div>\r\n                            <div className = \"card-body text-center p-4\">\r\n                            {this.renderInput(\"username\", \"Username\")}\r\n                            {this.renderInput(\"password\", \"Password\", \"password\")}\r\n                            {this.renderInput(\"name\", \"Name\")}\r\n                            {this.renderButton(\"Register\")}\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default RegisterForm;","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport auth from \"../../services/authService\";\r\n\r\nclass ProtectedRoute extends Component {\r\n  render() {\r\n    const { component: Component, render, ...rest } = this.props;\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props => {\r\n          if (!auth.getCurrentUser())\r\n            return (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/login\",\r\n                  state: {\r\n                    from: this.props.location\r\n                  }\r\n                }}\r\n              />\r\n            );\r\n          return Component ? <Component {...props} /> : render(props);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;","import React, { Component } from 'react';\r\nimport  { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Movies from './components/movies';\r\nimport MovieForm from './components/movieForm';\r\nimport Customers from './components/customers';\r\nimport Profile from './components/profile';\r\nimport Posters from './components/posters';\r\nimport NotFound from './components/notFound';\r\nimport NavBar from './components/navBar';\r\nimport Footer from './components/footer';\r\nimport LoginForm from './components/loginForm';\r\nimport Logout from './components/logout';\r\nimport RegisterForm from './components/registerForm';\r\nimport ProtectedRoute from './components/common/protectedRoute';\r\nimport auth from './services/authService';\r\nimport './assets/css/template.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nclass App extends Component {\r\n  state = {}\r\n\r\n  componentDidMount() {\r\n    const user = auth.getCurrentUser();\r\n    this.setState({ user });\r\n  }\r\n\r\n  render() {\r\n  const { user } = this.state;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer />\r\n      <NavBar user={user} />\r\n      <main className = \"container\">\r\n          <Switch>\r\n          <Route path = \"/register\" component = {RegisterForm} />\r\n          <Route path = \"/login\" component = {LoginForm} />\r\n          <Route path = \"/logout\" component = {Logout} />\r\n          <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\r\n          <Route \r\n          path = \"/movies\" \r\n          render = {props => <Movies {...props} \r\n          user={user} />} \r\n          />\r\n          <Route path = \"/rentals\" component = {Posters} />\r\n          <Route path = \"/customers\" component = {Customers} />\r\n          <Route path = \"/profile\" component = {Profile} user={user} />\r\n          <Route path = \"/not-found\" component = {NotFound} />\r\n          <Redirect from = \"/\" exact to = \"/movies\" />\r\n          <Redirect to = \"not-found\" />\r\n          </Switch>\r\n      </main>\r\n      <Footer />\r\n   </React.Fragment>\r\n  );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, \r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}